<?xml version="1.0" encoding="US-ASCII"?>
<!-- was: <?xml version="1.0" encoding="US-ASCII"?> -->
<!-- This template is for creating an Internet Draft using xml2rfc,
which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
There has to be one entity for each item to be referenced.
An alternate method (rfc include) is described in the references. -->
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs),
please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
(Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space
(using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-ietf-dprive-dtls-and-tls-profiles-10"
     ipr="trust200902" updates="7858">
  <!-- category values: std, bcp, info, exp, and historic
  ipr values: full3667, noModification3667, noDerivatives3667
  you can add the attributes updates="NNNN" and obsoletes="NNNN"
  they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the
    full title is longer than 39 characters -->

    <title abbrev="(D)TLS Authentication for DNS">Usage and (D)TLS Profiles
    for DNS-over-(D)TLS</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Sara Dickinson" initials="S." surname="Dickinson">
      <organization abbrev="Sinodun">Sinodun Internet
      Technologies</organization>

      <address>
        <postal>
          <street>Magdalen Centre</street>

          <street>Oxford Science Park</street>

          <city>Oxford</city>

          <region></region>

          <code>OX4 4GA</code>

          <country>UK</country>
        </postal>

        <email>sara@sinodun.com</email>

        <uri>http://sinodun.com</uri>
      </address>
    </author>

    <author fullname="Daniel Kahn Gillmor" initials="D." surname="Gillmor">
      <organization abbrev="ACLU">ACLU</organization>

      <address>
        <postal>
          <street>125 Broad Street, 18th Floor</street>

          <city>New York</city>

          <region></region>

          <code>NY 10004</code>

          <country>USA</country>
        </postal>

        <email>dkg@fifthhorseman.net</email>
      </address>
    </author>

    <author fullname="Tirumaleswar Reddy" initials="T." surname="Reddy">
      <organization abbrev="Cisco">Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street>Cessna Business Park, Varthur Hobli</street>

          <street>Sarjapur Marathalli Outer Ring Road</street>

          <city>Bangalore</city>

          <region>Karnataka</region>

          <code>560103</code>

          <country>India</country>
        </postal>

        <email>tireddy@cisco.com</email>
      </address>
    </author>

    <date month="Jun" year="2017" />

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill
          in the current day for you. If only the current year is specified, xml2rfc will fill
        in the current day and month for you. If the year is not the current one, it is
        necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the
        purpose of calculating the expiry date).  With drafts it is normally sufficient to
        specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>int</area>

    <workgroup>dprive</workgroup>

    <!-- WG name at the upperleft corner of the doc,
        IETF is fine for individual submissions.
        If this element is not present, the default is "Network Working Group",
        which is used by the RFC Editor as a nod to the history of the IETF. -->

    <keyword>DNS</keyword>

    <keyword>transport</keyword>

    <!-- Keywords will be incorporated into HTML output
        files in a meta tag but they have no effect on text or nroff
        output. If you submit your draft to the RFC Editor, the
        keywords will be used for the search engine. -->

    <abstract>
      <t> This document discusses Usage Profiles, based on one or more
          authentication mechanisms, which can be used
          for DNS over Transport Layer Security (TLS) or
          Datagram TLS (DTLS). These profiles can increase the privacy of DNS transactions
          compared to using only clear text DNS.
          This document also specifies new authentication mechanisms - it describes
          several ways a DNS client can use an authentication domain name to
          authenticate a (D)TLS connection to a DNS server. Additionally, it defines (D)TLS protocol
          profiles for DNS
          clients and servers implementing DNS-over-(D)TLS. This document updates RFC 7858.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>DNS Privacy issues are discussed in <xref target="RFC7626"></xref>. The specific
      issues described there that are most relevant to this document are
      <list style="symbols"><t>Passive attacks which eavesdrop on clear text DNS transactions on the wire 
              (Section 2.4) and</t>
            <t>Active attacks which redirect clients to rogue servers to monitor DNS traffic
              (Section 2.5.3).</t></list>
      Mitigating against these attacks increases the privacy of DNS transactions, however many of the 
      other issues raised in <xref target="RFC7626"></xref> still apply.</t>
      
      <t>Two documents that provide ways to increase DNS
         privacy between DNS clients and DNS servers are: <list style="symbols">
          <t><xref
          target="RFC7858">Specification for DNS over Transport Layer Security (TLS)</xref>, 
          referred to here as simply 'DNS-over-TLS'</t>
          <t><xref target="RFC8094">DNS over Datagram Transport Layer Security (DTLS)</xref>, 
          referred to here simply as 'DNS-over-DTLS'. 
          Note that this document has the Category of Experimental.</t>
        </list>
        Both documents are limited in scope to communications between stub clients
        and recursive resolvers and the same scope is applied to this document 
        (see <xref target="Terminology"></xref> and <xref target="Scope"></xref>).
        The proposals here might be adapted or extended in future to be used for
           recursive clients and authoritative servers, but this application was out
          of scope for the Working Group charter at the time this document was finished.</t>

      <t>This document specifies two Usage Profiles (Strict and Opportunistic) 
          for <xref target="RFC6347">DTLS</xref> and <xref
            target="RFC5246">TLS</xref> which provide improved levels of 
            mitigation against the attacks described above compared to using only clear text DNS. </t>
            
            <t><xref target="usageprofiles"></xref> presents a 
          generalized discussion of Usage Profiles by separating the Usage Profile,
          which is based purely on the
          security properties it offers the user, from the specific
          mechanism(s) that are used for DNS server authentication. The Profiles described are:
          <list style="symbols">
              <t> A Strict Profile that
               requires an encrypted connection and successful authentication of the
               DNS server which mitigates both passive eavesdropping and client re-direction 
               (at the expense of providing no DNS service if this
               is not available).</t>
               <t> An Opportunistic Profile that will attempt, but does not require, encryption and 
               successful authentication; it therefore provides limited or no mitigation against such attacks but 
               offers maximum chance of DNS service.</t>
          </list> </t> 

          <t>The above Usage Profiles attempt authentication of the server using at least one authentication mechanism.
              <xref target="combined-auth"></xref>  discusses how to combine authentication mechanisms
              to determine the overall authentication result.
              Depending on that overall authentication result (and whether encryption is available) the Usage Profile
              will determine if the connection should proceed, fallback or fail. </t>

             <t>One authentication mechanism is already described in <xref target="RFC7858"></xref>.
              That document specifies a Subject Public Key Info (SPKI) based authentication 
              mechanism for DNS-over-TLS in the context of a specific case of a Strict Usage Profile
              using that single authentication mechanism. Therefore
               the "Out-of-band Key-pinned Privacy Profile" described in 
               <xref
                 target="RFC7858"></xref> would qualify as a "Strict Usage Profile" that used
               SPKI pinning for authentication.
               </t>
               
               <t>This document extends the use of SPKI pinset based authentication so that it is considered a general
                   authentication mechanism that can be used with either DNS-over-(D)TLS Usage Profile.
                   That is, the SPKI pinset mechanism described in <xref target="RFC7858"></xref> MAY be used with
                     DNS-over-(D)TLS.</t>

           <t>This document also describes a 
               number of additional authentication mechanisms all of which
               specify how a DNS client should
              authenticate a DNS server based on an 'authentication domain name'. In particular, the 
              following is described: 
              <list style="symbols">
          <t>How a DNS client can obtain the combination of an authentication domain 
              name and IP address for a DNS server. See <xref target="authdomainname"></xref>.</t>

          <t>What are the acceptable credentials a DNS server can present to
          prove its identity for (D)TLS authentication based on a given authentication domain
          name. See <xref target="credentials"></xref>.</t>

          <t>How a DNS client can verify that any given credential matches the
          authentication domain name obtained for a DNS server. See <xref target="credentials"></xref>.</t>
        </list></t>

      <t>In <xref target="tls-profile"></xref> this document defines a (D)TLS protocol profile for use with
      DNS. This profile defines the configuration options and protocol
      extensions required of both parties to optimize connection establishment
      and session resumption for transporting DNS, and to support all currently specified
      authentication mechanisms.</t>
    </section>

    <section title="Terminology" anchor="Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119"></xref>.</t>

      <t>Several terms are used specifically in the context of this draft:
      <list style="symbols">
          <t>DNS client: a DNS stub resolver or forwarder. In the case
          of a forwarder, the term "DNS client" is used to discuss the side
          that sends queries.</t>

          <t>DNS server: a DNS recursive resolver or forwarder. In the
          case of a forwarder, the term "DNS server" is used to discuss the
          side that responds to queries.  For emphasis,
                in this document the term does not apply to
                authoritative servers.</t>

          <t>Privacy-enabling DNS server: A DNS server that implements 
              <xref target="RFC7858">DNS-over-TLS</xref> and may optionally implement <xref
                target="RFC8094">DNS-over-DTLS</xref>. The server should also offer at least one of the
              credentials described in <xref
              target="credentials"></xref> and implement the (D)TLS profile described in <xref
              target="tls-profile"></xref>.</t>

          <t>(D)TLS: For brevity this term is used for statements that apply
          to both <xref target="RFC5246">Transport Layer Security</xref> and
          <xref target="RFC6347">Datagram Transport Layer Security</xref>.
          Specific terms will be used for any statement that applies to either
          protocol alone.</t>

          <t>DNS-over-(D)TLS: For brevity this term is used for statements
          that apply to both <xref
          target="RFC7858">DNS-over-TLS</xref> and <xref
          target="RFC8094">DNS-over-DTLS</xref>. Specific
          terms will be used for any statement that applies to either protocol
          alone.</t>

          <t>Authentication domain name: A domain name that can be used to authenticate a 
             privacy-enabling DNS server. Sources of authentication domain names are
            discussed in  <xref target="authdomainname"></xref>.</t>

          <t>SPKI Pinsets: <xref target="RFC7858"></xref>
          describes the use of cryptographic digests to "pin" public key
          information in a manner similar to  <xref
          target="RFC7469">HTTP Public Key Pinning</xref> (HPKP). An SPKI pinset is a collection of
          these pins that constrains a DNS server.</t>

          <t>Authentication information: Information a DNS client may use as the basis of
              an authentication mechanism. In this context that can be either a:
              <list style="symbols">
                  <t>a SPKI pinset or</t>
                  <t>an authentication domain name</t></list> </t>

          <t>Reference Identifier: a Reference Identifier as described in
          <xref target="RFC6125"></xref>, constructed by the DNS client when
          performing TLS authentication of a DNS server.</t>

          <t>Credential: Information available for a DNS server which proves
          its identity for authentication purposes. Credentials discussed here
          include: <list style="symbols">
              <t>PKIX certificate</t>

              <t>DNSSEC validated chain to a TLSA record</t>
            </list> but may also include SPKI pinsets.</t>
        </list></t>
    </section>

    <section title="Scope" anchor="Scope">
      <t>This document is limited to describing
          <list style="symbols">
              <t>Usage Profiles based on general authentication mechanisms</t> 
              <t>The details of domain name based authentication of DNS
                 servers by DNS clients (as defined in the terminology section)</t>
            <t>The (D)TLS profiles needed to support authentication in DNS-over-(D)TLS.</t></list></t>

                <t>As such, the following things
      are out of scope: <list style="symbols">
          <t>Authentication of authoritative servers by recursive
          resolvers.</t>

          <t>Authentication of DNS clients by DNS servers.</t>

          <t>The details of how to perform SPKI-pinset-based authentication. This is defined in <xref
          target="RFC7858"></xref>.</t>

          <t>Any server identifier other than domain names, including IP
          addresses, organizational names, country of origin, etc.</t>
        </list></t>

    </section>

    <section title="Discussion">
        <t>One way to mitigate against passive attackers eavesdropping on clear text DNS transactions
           is to encrypt the query (and response). Such encryption typically provides integrity
        protection as a side-effect, which means on-path attackers cannot
        simply inject bogus DNS responses. To also mitigate
        against active attackers pretending to be the server, the
        client must authenticate the (D)TLS connection to the server.</t>
        
        <t>This document discusses Usage Profiles, which provide differing levels of 
            attack mitigation to DNS clients, based on the requirements for 
            authentication and encryption, regardless of the context (for example,
            which network the client is connected to).
            A Usage Profile is a distinct concept to 
            a usage policy or usage model, which might dictate which Profile should be used
            in a particular context (enterprise vs coffee shop), 
            with a particular set of DNS Servers or with reference
            to other external factors. A description of the variety of usage policies
            is out of scope of this document, but may be the subject of future work.</t>
            
            <t>The term 'privacy-enabling DNS server' is used throughout this document. This is a DNS server that: <list
                style="symbols">
                <t>MUST implement <xref
                target="RFC7858">DNS-over-TLS</xref>.</t>
                <t> MAY implement <xref
                  target="RFC8094">DNS-over-DTLS</xref>.</t>

                <t>SHOULD offer at least one of the credentials described in <xref
                target="credentials"></xref>.</t>

                <t>Implements the (D)TLS profile described in <xref
                target="tls-profile"></xref>.</t>
              </list></t>
      </section>

      <section anchor="usageprofiles" title="Usage Profiles">
        <t>A DNS client has a choice of Usage Profiles available to increase the privacy of DNS transactions. This
        choice is briefly discussed in both <xref
        target="RFC7858"></xref> and <xref
        target="RFC8094"></xref>. These Usage
        Profiles are: <list style="symbols">
            <t>Strict profile: the DNS client requires both an encrypted and
            authenticated connection to a privacy-enabling DNS Server. A hard
            failure occurs if this is not available. This requires the client
            to securely obtain authentication information it can use to authenticate the
            server. This profile mitigates against both passive and active attacks providing
            the client with the best available privacy for DNS.
            This Profile is discussed in detail in <xref target="strict"></xref>.</t>

            <t>Opportunistic Privacy: the DNS client uses Opportunistic
            Security as described in <xref target="RFC7435"></xref> 
            <list style="none">
                <t>"... the use of cleartext as the baseline communication
                security policy, with encryption and authentication negotiated
                and applied to the communication when available."</t></list>
                   The use of Opportunistic Privacy is intended to support incremental deployment of
                   increased privacy with a view to widespread adoption of the Strict profile.
                   It should be employed when the DNS client might otherwise
                   settle for cleartext; it provides the maximum protection an attacker will allow.
                   As described in <xref target="RFC7435"></xref> it might result in 
                   <list style="symbols">
                       <t>an encrypted and authenticated connection</t> 
                       <t>an encrypted connection</t>
                       <t>a clear text connection</t>
                   </list>
                   depending on the fallback logic of the client, the available 
                   authentication information and the capabilities of
                   the DNS Server. In all these cases the DNS client is willing to continue with
                   a connection to the DNS Server and perform resolution of queries.
              </t> </list></t>

              <t>Both profiles can include an initial meta query
              (performed using an Opportunistic lookup) to obtain the IP
              address for the privacy-enabling
              DNS server to which the DNS client will subsequently connect. The
              rationale for permitting this for the Strict profile is that requiring such meta
              queries to also be performed using the Strict profile would introduce 
              significant deployment obstacles. However, it should be noted that 
              in this scenario an active attack is possible on the meta query which
              could result in the client not being able to connect to a privacy-enabling
              DNS server that it can authenticate.</t>

        <t>To compare the two Usage profiles the table below shows a successful Strict profile
            along side the 3 possible outcomes of an Opportunistic profile. 
            In the best case scenario for the Opportunistic profile (an authenticated and encrypted
            connection) it is equivalent to the Strict profile. In the worst
            case scenario it is equivalent to clear text.
            Clients using the Opportunistic profile SHOULD try for the best case but MAY fallback to
            the intermediate case and eventually the worst case scenario in order
            to obtain a response. One reason to fallback without trying every available
            privacy-enabling DNS server is if latency is more important than attack mitigation, see <xref target="probing"></xref>. 
            The Opportunistic profile therefore provides varying protection depending on what kind of connection is
            actually used including no attack mitigation at all.</t>

        <t>Note that there is no requirement in Opportunistic Security to notify
            the user what type of connection is actually used, the 'detection' described below is
            only possible if such connection information is available. However, if it 
            is available and the user
            is informed that an unencrypted connection was used to connect to a server
            then the user should assume (detect) that the connection is subject to both active and passive
            attack since the DNS queries are sent in clear text. This might be particularly useful
            if a new connection to a certain server is unencrypted when all previous
            connections were encrypted. Similarly if the user is informed that an
            encrypted but unauthenticated connection was used then the user can detect that 
            the connection may be subject to active attack. In other words for the cases
            where no protection is provided against an attacker (N) it is possible to detect that 
            an attack might be happening (D). This is discussed in <xref
            target="opportunistic"></xref>.</t>


        <texttable anchor="table_ex"
                   title="Attack protection by Usage Profile and type of attacker">
          <ttcol align="center">Usage Profile</ttcol>

          <ttcol align="center">Connection</ttcol>

          <ttcol align="center">Passive Attacker</ttcol>

          <ttcol align="center">Active Attacker</ttcol>

          <c>Strict</c>

          <c>A, E</c>

          <c>P</c>

          <c>P</c>

          <c>Opportunistic</c>

          <c>A, E</c>

          <c>P</c>

          <c>P</c>

          <c>Opportunistic</c>

          <c>E</c>

          <c>P</c>

          <c>N, D</c>

          <c>Opportunistic</c>

          <c></c>

          <c>N, D</c>

          <c>N, D</c>

          <postamble>P == Protection; N == No protection; D == Detection is
          possible; A == Authenticated connection; E == Encrypted connection</postamble>
        </texttable>

        <t>The Strict profile provides the best attack mitigation and therefore SHOULD
        always be implemented in DNS clients that implement Opportunistic Privacy.</t>

        <t>A DNS client that implements DNS-over-(D)TLS SHOULD NOT be configured by default 
            to use only clear text.</t>

        <t>The choice between the two profiles depends on a number of factors including
        which is more important to the particular client:<list style="symbols">
        <t>DNS service at the cost of no attack mitigation (Opportunistic) or</t>
        <t>best available attack mitigation at the potential cost of no DNS service (Strict).</t></list></t>

        <t>Additionally the two profiles require varying levels of configuration (or a
        trusted relationship with a provider) and DNS server capabilities, therefore DNS
        clients will need to carefully select which profile to use based on their 
        communication needs. </t>

        <t>A DNS server that implements DNS-over-(D)TLS SHOULD provide at least one credential
        so that those DNS clients that wish to do so are able to use the Strict
        profile (see Section 2).</t>

        <section title="DNS Resolution">
        <t>A DNS client SHOULD select a particular Usage Profile when
        resolving a query. A DNS client MUST NOT fallback from Strict Privacy
        to Opportunistic Privacy during the resolution of a given query as this could
        invalidate the protection offered against attackers. It is 
        anticipated that DNS clients will use a particular Usage Profile for all 
        queries to all configured servers until an operational issue or policy update dictates a change 
        in the profile used.</t>
        </section>
      </section>

      <section title="Authentication in DNS-over(D)TLS">
         <t>This section describes authentication mechanisms and how they can be used
         in either Strict or Opportunistic Privacy for DNS-over-(D)TLS.</t>

        <section title="DNS-over-(D)TLS Startup Configuration Problems">
          <t>Many (D)TLS clients use <xref target="RFC6125">PKIX
          authentication</xref> based on an authentication domain name for the server they are
          contacting. These clients typically first look up the server's
          network address in the DNS before making this connection. Such a DNS
          client therefore has a bootstrap problem, as it will typically only know
          the IP address of its DNS server.</t>

          <t>In this case, before connecting to a DNS server, a DNS client needs to
          learn the authentication domain name it should associate with the IP address of a
          DNS server for authentication purposes. Sources of authentication domain names are
          discussed in <xref target="authdomainname"></xref>.</t>

          <t>One advantage of this domain name based approach is that it
          encourages association of stable, human recognizable identifiers
          with secure DNS service providers.</t>

        </section>

        <section title="Credential Verification">
          <t>The use of SPKI pinset verification is discussed in <xref
          target="RFC7858"></xref>.</t>

          <t>In terms of domain name based verification, once an authentication domain name is
          known for a DNS server a choice of authentication mechanisms can be used for
          credential verification. <xref target="credentials"></xref> discusses these
          mechanisms in detail, namely PKIX certificate based authentication
          and DANE.</t>

          <t>Note that the use of DANE adds requirements on the ability of the
          client to get validated DNSSEC results. This is discussed in more
          detail in <xref target="dane"></xref>.</t>
        </section>

        <section title="Summary of Authentication Mechanisms">

            <t>This section provides an overview of the various authentication mechanisms. 
                The table below indicates how the DNS client obtains information to use for
                    authentication for each option; either statically via direct configuration or dynamically. Of course, the
                Opportunistic Usage Profile does not require authentication and so a client using that profile may choose to
                connect to a privacy-enabling DNS server on the basis of just an IP address.</t>

            <texttable anchor="table_summary"
                       title="Overview of Authentication Mechanisms">
              <ttcol align="center">#</ttcol>
              <ttcol align="left" width="17%">Static Config</ttcol>

              <ttcol align="left">Dynamically Obtained</ttcol>

              <ttcol align="left">Short name: Description</ttcol>

              <c>1</c>  <c>SPKI + IP</c>  <c></c> <c>SPKI: SPKI pinset(s) and IP address obtained out of band <xref
                target="RFC7858"></xref> </c>

              <c></c><c></c><c></c><c></c>

              <c>2</c>  <c>ADN + IP</c>   <c></c> <c>ADN: ADN and IP address obtained out of band (see <xref target="Fullconfig"></xref>)</c>

              <c></c><c></c><c></c><c></c>

              <c>3</c>  <c>ADN     </c>    <c>IP </c> <c>ADN only: Opportunistic lookups to a NP DNS server for A/AAAA (see <xref target="ADNonly"></xref>)</c>

              <c></c><c></c><c></c><c></c>

              <c>4</c>  <c>    </c>    <c>ADN + IP </c> <c>DHCP: DHCP configuration only (see <xref target="DHCP"></xref>)</c>

              <c></c><c></c><c></c><c></c>

              <c>5</c>  <c>[ADN + IP]    </c>  <c>[ADN + IP] TLSA record </c> <c>DANE: DNSSEC chain obtained via Opportunistic lookups to NP DNS server (see <xref target="directDANE"></xref>)</c>

              <c></c><c></c><c></c><c></c>

              <c>6</c>  <c>[ADN + IP]    </c>  <c>[ADN + IP] TLSA record </c> <c>TLS extension: DNSSEC chain provided by PE DNS server in TLS DNSSEC chain extension (see <xref target="TLSext"></xref>)</c>

              <postamble>SPKI == SPKI pinset(s),  IP == IP Address,  ADN == Authentication Domain Name,  NP == Network provided, PE == Privacy-enabling, [ ] == Data may be obtained either statically or dynamically </postamble>
            </texttable>

            <t>The following summary attempts to present some key attributes of each of the mechanisms (using the 'Short name' from Table 2), indicating attractive attributes with a '+' and undesirable attributes with a '-'. </t>

            <t><list style="numbers"> 
                <t>SPKI<list style="empty">
                    <t>+ Minimal leakage (Note that the ADN is always leaked in the Server Name Indication (SNI) field in the Client Hello in TLS when communicating with a privacy-enabling DNS server)</t>
                    <t>- Overhead of on-going key management required</t>
                </list></t>
                <t>ADN<list style="empty">
                    <t>+ Minimal leakage</t>
                    <t>+ One-off direct configuration only</t>
                </list></t>
                <t>ADN only<list style="empty">
                    <t>+ Minimal one-off direct configuration, only a human recognizable domain name needed</t>
                    <t>- A/AAAA meta queries leaked to network provided DNS server that may be subject to active attack</t>
                </list></t>
                <t>DHCP<list style="empty">
                    <t>+ No static config</t>
                    <t>- Requires a non-standard or future DHCP option in order to provide the ADN</t>
                    <t>- Requires secure and trustworthy connection to DHCP server if used with a Strict Usage profile</t>
                </list></t>
                <t>DANE<list style="empty">
                    <t> The ADN and/or IP may be obtained statically or dynamically and the relevant attributes of that method apply</t>
                    <t>+ DANE options (e.g., matching on entire certificate)</t>
                    <t>- Requires a DNSSEC validating stub implementation (deployment of which is limited at the time of writing)</t>
                    <t>- DNSSEC chain meta queries leaked to network provided DNS server that may be subject to active attack</t>
                </list></t>
                <t>TLS extension<list style="empty">
                    <t> The ADN and/or IP may be obtained statically or dynamically and the relevant attributes of that method apply</t>
                    <t>+ Reduced latency compared with 'DANE'</t>
                    <t>+ No network provided DNS server required if ADN and IP statically configured</t>
                    <t>+ DANE options (e.g., matching on entire certificate)</t>
                    <t>- Requires a DNSSEC validating stub implementation</t>
                </list></t>
        </list></t>

        </section>

        <section anchor="combined-auth"
                 title="Combining Authentication Mechanisms">

          <t>This draft does not make explicit recommendations about how an SPKI
          pinset based authentication mechanism should be combined with a domain
          based mechanism from an operator perspective. However it can be
          envisaged that a DNS server operator may wish to make both an SPKI
          pinset and an authentication domain name available to allow clients to choose which
          mechanism to use. Therefore, the following is guidance on how clients
          ought to behave if they choose to configure both, as is possible in
          <xref target="RFC7469">HPKP</xref>.</t>

          <t>A DNS client that is configured with both an authentication domain name and a SPKI
          pinset for a DNS server SHOULD match on both a valid credential for the
          authentication domain name and a valid SPKI pinset (if both are available)
          when connecting to that DNS server. In this case the client SHOULD treat the 
          SPKI pin as specified in Section 2.6 of <xref target="RFC7469"></xref> with regard to user defined 
          trust anchors. The overall authentication result SHOULD only
          be considered successful if both authentication mechanisms are successful.</t>

        </section>

    <section anchor="opportunistic"
             title="Authentication in Opportunistic Privacy">
      <t>An <xref target="RFC7435">Opportunistic Security</xref> profile is
      described in <xref target="RFC7858"></xref> which
      MAY be used for DNS-over-(D)TLS.</t>

      <t>DNS clients issuing queries under an opportunistic profile and which know
      authentication information for a given privacy-enabling DNS server
      SHOULD try to authenticate the server using the mechanisms
      described here. This is useful for detecting (but not preventing) active
      attack, since the fact that authentication information is available
      indicates that the server in question is a privacy-enabling DNS server
      to which it should be possible to establish an authenticated and encrypted
      connection. In this case, whilst a client cannot know the reason for an
      authentication failure, from a security standpoint the client should
      consider an active attack in progress and proceed under that assumption. For example,
      a client that implements a nameserver selection algorithm that preferentially
      uses nameservers which successfully authenticated (see <xref target="usageprofiles"></xref>)
      might not continue to use the failing server if there were alternative servers available.</t>

      <t>Attempting authentication is also useful for debugging or diagnostic
      purposes if there are means to report the result. This information can
      provide a basis for a DNS client to switch to (preferred) Strict Privacy
      where it is viable e.g, where all the configured servers support 
      DNS-over-(D)TLS and successfully authenticate. </t>
    </section>

    <section anchor="strict"
             title="Authentication in Strict Privacy">
      <t>To authenticate a privacy-enabling DNS server, a DNS client needs to
      know authentication information for each server it is willing to contact. This is
      necessary to protect against active attacks which attempt to re-direct clients
      to rogue DNS servers.</t>

      <t>A DNS client requiring Strict Privacy MUST either use one of the
      sources listed in <xref target="authdomainname"></xref> to obtain an
      authentication domain name for the server it contacts, or use an SPKI pinset as
      described in <xref target="RFC7858"></xref>.</t>

      <t>A DNS client requiring Strict Privacy MUST only attempt to connect to
      DNS servers for which at least one piece of authentication information is known. 
      The client MUST use the available verification mechanisms
      described in <xref target="credentials"></xref> to authenticate the
      server, and MUST abort connections to a server when no verification
      mechanism succeeds.</t>

      <t>With Strict Privacy, the DNS client MUST NOT commence sending DNS
      queries until at least one of the privacy-enabling DNS servers becomes
      available.</t>

      <t>A privacy-enabling DNS server may be temporarily unavailable when
      configuring a network. For example, for clients on networks that require
      registration through web-based login (a.k.a. "captive portals"), such
      registration may rely on DNS interception and spoofing. Techniques such
      as those used by DNSSEC-trigger <xref target="dnssec-trigger"></xref>
      MAY be used during network configuration, with the intent to transition
      to the designated privacy-enabling DNS servers after captive portal
      registration. If using a Strict Usage profile the system MUST alert by some means that the DNS is not
      private during such bootstrap.</t>

    </section>

    <section title="Implementation guidance">
      <t><xref target="tls-profile"></xref> describes the (D)TLS profile
      for DNS-over(D)TLS. Additional considerations relating to general
      implementation guidelines are discussed in both <xref
      target="security"></xref> and in <xref target="probing"></xref>.</t>
    </section>
    </section>
    
    <section anchor="authdomainname" title="Sources of Authentication Domain Names">

      <section anchor="Fullconfig" title="Full direct configuration">
        <t>DNS clients may be directly and securely provisioned with the
        authentication domain name of each privacy-enabling DNS server. For example, using a
        client specific configuration file or API.</t>

        <t>In this case, direct configuration for a DNS client would consist
        of both an IP address and an authentication domain name for each DNS server.</t>
      </section>

      <section anchor="ADNonly" title="Direct configuration of name only">

        <t>A DNS client may be configured directly and securely with only the
        authentication domain name of each of its privacy-enabling DNS servers. For example, using a
        client specific configuration file or API.</t>

        <t>A DNS client might learn of a default recursive DNS resolver from
        an untrusted source (such as DHCP's DNS server option <xref
        target="RFC3646"></xref>). It can then use Opportunistic DNS
        connections to an untrusted recursive DNS resolver to establish the IP
        address of the intended privacy-enabling DNS resolver by doing a lookup
        of A/AAAA records. Private
        DNS resolution can now be done by the DNS client against the
        pre-configured privacy-enabling DNS resolver, using the IP address
        gathered from the untrusted DNS resolver.</t>

        <t>A DNS client so configured that successfully connects to a
        privacy-enabling DNS server MAY choose to locally cache the server host IP
        addresses in order to not have to repeat the opportunistic lookup.</t>

      </section>
      
      <section title="No configuration: Dynamic discovery of ADN">

      <t>This section discusses the general case of a DNS client discovering both 
      the authentication domain name and IP address dynamically. This is not 
      possible at the time of writing by any standard means. However since, 
      for example, a future DHCP extension could (in principle) provide this 
      mechanism the required security properties of such mechanisms are outlined here. </t>

      <t>When using a Strict profile the dynamic discovery technique used as a 
      source of authentication domain names MUST be
      considered secure and trustworthy. This requirement does not apply when 
      using an Opportunistic profile given the
      security expectation of that profile.</t>

      <section anchor="DHCP" title="DHCP">

      <t>In the typical case today, a DHCP server <xref target="RFC2131"></xref>
      <xref target="RFC3315"></xref> provides a list
      of IP addresses for DNS resolvers (see Section 3.8 of <xref target="RFC2132"></xref>), but
      does not provide an authentication domain name for the DNS resolver, thus preventing
      the use of most of the authentication methods described here (all
      those that are based on a mechanism with ADN in  <xref target="table_summary"></xref>).</t>

        <t>This document does not specify or request any DHCP extension to provide 
            authentication domain names. However, if one is developed in future work 
            the issues outlined in Section 8 of <xref target="RFC7227"></xref> should be taken into account 
            as should the Security Considerations in Section 23 of <xref target="RFC3315"></xref>). </t>

        <t>This document does not attempt to describe secured and
        trusted relationships to DHCP servers, which is a purely DHCP
        issue (still open, at the time of writing.) Whilst some
        implementation work is in progress to secure IPv6 connections for
        DHCP, IPv4 connections have received little to no implementation
        attention in this area.</t>

      </section>
      </section>
    </section>

    <section anchor="credentials" title="Authentication Domain Name based Credential Verification">
      <section anchor="certs" title="PKIX Certificate Based Authentication">
        <t>When a DNS client configured with an authentication domain name connects to its
        configured DNS server over (D)TLS, the server may present it with a
        PKIX certificate. In order to ensure proper authentication, DNS
        clients MUST verify the entire certification path per <xref
        target="RFC5280"></xref>. The DNS client additionally uses <xref
        target="RFC6125"></xref> validation techniques to compare the domain
        name to the certificate provided.</t>

        <t>A DNS client constructs one Reference Identifier for the server
        based on the authentication domain name: A DNS-ID which is simply the 
        authentication domain name itself. </t>

        <t>If the Reference Identifier is found in the PKIX
        certificate's subjectAltName extension as described in section 6 of
        <xref target="RFC6125"></xref>, the DNS client should accept the
        certificate for the server.</t>

        <t>A compliant DNS client MUST only inspect the certificate's
        subjectAltName extension for the Reference Identifier. In
        particular, it MUST NOT inspect the Subject field itself.</t>
      </section>

      <section anchor="dane" title="DANE">
        <t><xref target="RFC6698">DANE</xref> provides mechanisms to anchor
        certificate and raw public key trust with DNSSEC. However this
        requires the DNS client to have an authentication domain name for the DNS Privacy Server
        which must be obtained via a trusted source.</t>
        
        <t>This section assumes a solid understanding of both 
            <xref target="RFC6698">DANE</xref> and 
            <xref target="RFC7671">DANE Operations</xref>. A few pertinent
            issues covered in these documents are outlined here as useful pointers,
            but familiarity with both these documents in their entirety is expected.</t>

        <t>It is noted that <xref target="RFC6698"></xref> says <list
            style="none">
            <t>"Clients that validate the DNSSEC signatures themselves MUST
            use standard DNSSEC validation procedures. Clients that rely on
            another entity to perform the DNSSEC signature validation MUST use
            a secure mechanism between themselves and the validator."</t>
          </list></t>
          
         <t>It is noted that <xref target="RFC7671"></xref> covers the following topics:
            <list style='symbols'>
                <t>Section 4.1: Opportunistic Security and PKIX Usages and Section 14:
                    Security Considerations, which both discuss the use 
                    of Trust Anchor and End Entity based schemes (PKIX-TA(0) and PKIX-EE(1) 
                    respectively) for Opportunistic Security.</t>
                <t>Section 5: Certificate-Usage-Specific DANE Updates and Guidelines.
                    Specifically Section 5.1 which outlines the combination of
                    Certificate Usage DANE-EE(3) and Selector Usage SPKI(1) with
                    Raw Public Keys <xref target="RFC7250"></xref>.
                    Section 5.1 also discusses the security implications
                    of this mode, for example, it discusses
                    key lifetimes and specifies that validity period enforcement
                    is based solely on the TLSA RRset properties for this case.</t>
                <t>Section 13: Operational Considerations, which discusses TLSA TTLs
                    and signature validity periods.</t>
            </list>
         </t>

        <t>The specific DANE record for a DNS Privacy Server would take the form: <list>
            <t>_853._tcp.[authentication-domain-name] for TLS</t>

            <t>_853._udp.[authentication-domain-name] for DTLS</t>
          </list></t>

        <section anchor="directDANE" title="Direct DNS Lookup">
          <t>The DNS client MAY choose to perform the DNS lookups to retrieve
          the required DANE records itself. The DNS queries for such DANE
          records MAY use Opportunistic encryption or be in the clear to avoid
          trust recursion. The records MUST be validated using DNSSEC as
          described above in <xref target="RFC6698"></xref>.</t>
        </section>

        <section anchor="TLSext" title="TLS DNSSEC Chain extension">
          <t>The DNS client MAY offer the TLS extension described in <xref
          target="I-D.ietf-tls-dnssec-chain-extension"></xref>. If the DNS
          server supports this extension, it can provide the full chain to the
          client in the handshake.</t>

          <t>If the DNS client offers the TLS DNSSEC Chain extension, it MUST
          be capable of validating the full DNSSEC authentication chain down
          to the leaf. If the supplied DNSSEC chain does not validate, the
          client MUST ignore the DNSSEC chain and validate only via other
          supplied credentials.</t>

        </section>
      </section>
    </section>


    <section anchor="tls-profile" title="(D)TLS Protocol Profile">
      <t>This section defines the (D)TLS protocol profile of
      DNS-over-(D)TLS.</t>

      <t>Clients and servers MUST adhere to the (D)TLS
      implementation recommendations and security considerations of <xref
      target="RFC7525"></xref> except with respect to (D)TLS version.</t> 

      <t>Since
      encryption of DNS using (D)TLS is a green-field deployment DNS
      clients and servers MUST implement only (D)TLS 1.2 or later. For example,
      implementing <xref target="I-D.ietf-tls-tls13">TLS 1.3</xref> is also an option.</t>

      <t>Implementations MUST NOT offer or provide TLS compression, since
      compression can leak significant amounts of information, especially to a
      network observer capable of forcing the user to do an arbitrary DNS
      lookup in the style of the <xref target="CRIME">CRIME
      attacks</xref>.</t>

      <t>Implementations compliant with this profile MUST implement all of the
      following items:</t>

      <t><list style="symbols">
          <t><xref target="RFC5077">TLS session resumption without server-side
          state</xref> which eliminates the need for the server to retain
          cryptographic state for longer than necessary (This statement updates
          <xref target="RFC7858"></xref>).</t>

          <t><xref target="RFC7250">Raw public keys</xref> which reduce the
          size of the ServerHello, and can be used by servers that cannot
          obtain certificates (e.g., DNS servers on private networks). A client
          MUST only indicate support for raw public keys if it has an SPKI pinset
          pre-configured (for interoperability reasons).</t>
        </list></t>

      <t>Implementations compliant with this profile SHOULD implement all of
      the following items:</t>

      <t><list style="symbols">
          <t><xref target="RFC7918">TLS False Start</xref>
          which reduces round-trips by allowing the TLS second flight of
          messages (ChangeCipherSpec) to also contain the (encrypted) DNS
          query.</t>

          <t><xref target="RFC7924">Cached Information
          Extension</xref> which avoids transmitting the server's certificate
          and certificate chain if the client has cached that information from
          a previous TLS handshake.</t>
        </list></t>

      <t>Guidance specific to TLS is provided in <xref
        target="RFC7858"></xref> and that specific to DTLS it is provided in <xref
      target="RFC8094"></xref>.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This memo includes no request to IANA.</t>
    </section>

    <section anchor="security" title="Security Considerations">
      <t>Security considerations discussed in <xref target="RFC7525"></xref>,
      <xref target="RFC8094"></xref> and <xref
      target="RFC7858"></xref> apply to this
      document.</t>

	 <t>DNS Clients SHOULD implement support for the mechanisms described in 
		<xref target="dane"></xref> and offering a configuration option which limits authentication to using
		only those mechanisms (i.e., with no fallback to pure PKIX based authentication) 
		such that authenticating solely via the PKIX infrastructure can be avoided.</t>

      <section anchor="traffic"
               title="Counter-measures to DNS Traffic Analysis">
        <t>This section makes suggestions for measures that can reduce the
        ability of attackers to infer information pertaining to encrypted
        client queries by other means (e.g., via an analysis of encrypted
        traffic size, or via monitoring of resolver to authoritative
        traffic).</t>

        <t>DNS-over-(D)TLS clients and servers SHOULD implement
        the following relevant DNS extensions <list style="symbols">
            <t><xref target="RFC7830">EDNS(0)
            padding</xref>, which allows encrypted queries and responses to
            hide their size making analysis of encrypted traffic harder.</t>
            </list></t>

        <t>Guidance on padding policies for EDNS(0) is provided in <xref target="I-D.ietf-dprive-padding-policy"></xref></t>

        <t>DNS-over-(D)TLS clients SHOULD implement the following
        relevant DNS extensions <list style="symbols">
            <t><xref target="RFC7871">Privacy
            Election using Client Subnet in DNS Queries</xref>. If a DNS
            client does not include an EDNS0 Client Subnet Option with a
            SOURCE PREFIX-LENGTH set to 0 in a query, the DNS server may
            potentially leak client address information to the upstream
            authoritative DNS servers. A DNS client ought to be able to inform
            the DNS Resolver that it does not want any address information
            leaked, and the DNS Resolver should honor that request.</t>
          </list></t>
      </section>
    </section>

    <section anchor="Acknowledgements" title="Acknowledgments">
      <t>Thanks to the authors of both <xref
      target="RFC8094"></xref> and <xref
      target="RFC7858"></xref> for laying the ground work
      that this draft builds on and for reviewing the contents. The authors
      would also like to thank John Dickinson, Shumon Huque, Melinda Shore,
      Gowri Visweswaran, Ray Bellis, Stephane Bortzmeyer, Jinmei Tatuya, Paul Hoffman, 
      Christian Huitema and John Levine for
      review and discussion of the ideas presented here.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include="reference.RFC.6125"?>

      <?rfc include="reference.RFC.7525"?>

      <?rfc include="reference.RFC.5077"?>

      <?rfc include="reference.RFC.2119"?>

      <?rfc include="reference.RFC.6347"?>

      <?rfc include="reference.RFC.5246"?>

      <?rfc include="reference.RFC.6698"?>

      <?rfc include="reference.RFC.7250"?>

      <?rfc include="reference.RFC.5280"?>

      <?rfc include="reference.RFC.7858"?>

      <?rfc include="reference.RFC.7830"?>

      <?rfc include="reference.RFC.7671"?>

      <?rfc include="reference.RFC.7918"?>

      <?rfc include="reference.RFC.7924"?>

      <?rfc include="reference.RFC.8094"?>
    </references>

    <references title="Informative References">
      <?rfc include="reference.RFC.7469"?>

      <?rfc include="reference.RFC.7626"?>

      <?rfc include="reference.RFC.2131"?>

      <?rfc include="reference.RFC.2132"?>

      <?rfc include="reference.RFC.3315"?>

      <?rfc include="reference.RFC.7435"?>

      <?rfc include="reference.RFC.3646"?>

      <?rfc include="reference.RFC.7227"?>

      <?rfc include="reference.RFC.7871"?>

      <?rfc include="reference.I-D.ietf-tls-tls13"?>

      <?rfc include="reference.I-D.ietf-tls-dnssec-chain-extension"?>

      <?rfc include="reference.I-D.ietf-dprive-padding-policy"?>
      <reference anchor="CRIME">
        <front>
          <title>The CRIME Attack</title>

          <author initials="J." surname="Rizzo"></author>

          <author initials="T." surname="Duong">
            <organization>EKOparty Security Conference</organization>
          </author>

          <date year="2012" />
        </front>
      </reference>

      <reference anchor="dnssec-trigger"
                 target="https://www.nlnetlabs.nl/projects/dnssec-trigger/">
        <front>
          <title>Dnssec-Trigger</title>

          <author>
            <organization>NLnetLabs</organization>
          </author>

          <date month="May" year="2014" />
        </front>
      </reference>
    </references>

    <section anchor="probing"
             title="Server capability probing and caching by DNS clients">
      <t>This section presents a non-normative discussion of how DNS clients
      might probe for and cache capabilities of privacy-enabling DNS servers.</t>

      <t>Deployment of both DNS-over-TLS and DNS-over-DTLS will be gradual.
      Not all servers will support one or both of these protocols and the
      well-known port might be blocked by some middleboxes. Clients will be
      expected to keep track of servers that support DNS-over-TLS and/or
      DNS-over-DTLS, and those that have been previously authenticated.</t>

      <t>If no server capability information is available then (unless
      otherwise specified by the configuration of the DNS client) DNS clients
      that implement both TLS and DTLS should try to authenticate using both
      protocols before failing or falling back to a unauthenticated or clear text connections. DNS
      clients using an Opportunistic Usage profile should try all available servers
      (possibly in parallel) in order to obtain an authenticated and encrypted
      connection before falling back. (RATIONALE: This
      approach can increase latency while discovering server capabilities but
      maximizes the chance of sending the query over an authenticated and
      encrypted connection.)</t>

      <!--<t> [TODO: Should we make recommendations about what to do if
                    a previously authenticated server starts failing authentication?]
                    After review, removed for the first version.</t>-->
    </section>

    <section title="Changes between revisions">
      <t>[Note to RFC Editor: please remove this section prior to
      publication.]</t>

      <section title="-09 version">
           <t>Remove the SRV record to simplify the draft. </t>
           <t>Add suggestion that clients offer option to avoid using only PKIX authentication.</t>
           <t>Clarify that the MUST on implementing TLS session resumption updates RFC7858.</t>
           <t>Update page header to be '(D)TLS Authentication for TLS'.</t>
       </section>

      <section title="-08 version">
           <t>Removed hard failure as an option for Opportunistic Usage profile.</t>
           <t>Added a new section comparing the Authentication Mechanisms</t>
       </section>

      <section title="-07 version">
           <t>Re-work of the Abstract and Introduction to better describe the contents in this version.</t>
           <t>Terminology: New definition of 'authentication information'.</t>
           <t>Scope: Changes to the Scope section.</t>
           <t>Moved discussion of combining authentication mechanism earlier.</t>
           <t>Changes to the section headings and groupings to make the presentation more logical.</t>
       </section>

      <section title="-06 version">
           <t>Introduction: Re-word discussion of Working group charter.</t>
           <t>Introduction: Re-word first and third bullet point about 'obtaining' a domain name and IP address.</t>
           <t>Introduction: Update reference to DNS-over-TLS draft.</t>
           <t>Terminology: Change forwarder/proxy to just forwarder</t>
           <t>Terminology: Add definition of 'Authentication domain name' and use this throughout</t>
           <t>Section 4.2: Remove parenthesis in the table.</t>
           <t>Section 4.2: Change the text after the table as agreed with Paul Hoffman.</t>
           <t>Section 4.3.1: Change title and remove brackets around last statement.</t>
           <t>Section 11: Split second paragraph.</t>
           <t></t>
       </section>

      <section title="-05 version">
           <t>Add more details on detecting passive attacks to section 4.2</t>
           <t>Changed X.509 to PKIX throughout</t>
           <t>Change comment about future I-D on usage policies.</t>
       </section>


      <section title="-04 version">
           <t>Introduction: Add comment that DNS-over-DTLS draft is Experiments</t>
           <t>Update 2 I-D references to RFCs.</t>
       </section>

      <section title="-03 version">
           <t>Section 9: Update DANE section with better references to RFC7671 and RFC7250</t>
       </section>

      <section title="-02 version">
          <t>Introduction: Added paragraph on the background and scope of the document.</t>
          <t>Introduction and Discussion: Added more information 
              on what a Usage profiles is (and is not) the the two presented here.</t>
          <t>Introduction: Added paragraph to make a comparison with
              the Strict profile in RFC7858 clearer.</t>
          <t>Section 4.2: Re-worked the description of Opportunistic and the table.</t>
          <t>Section 8.3: Clarified statement about use of DHCP in Opportunistic profile </t>
          <t>Title abbreviated.</t>
      </section>

      <section title="-01 version">
        <t>Section 4.2: Make clear that the Strict Privacy Profile can include
        meta queries performed using Opportunistic Privacy.</t>

        <t>Section 4.2, Table 1: Update to clarify that Opportunistic Privacy
        does not guarantee protection against passive attack.</t>

        <t>Section 4.2: Add sentence discussing client/provider trusted
        relationships.</t>

        <t>Section 5: Add more discussion of detection of active attacks when
        using Opportunistic Privacy.</t>

        <t>Section 8.2: Clarify description and example.</t>
      </section>

      <section title="draft-ietf-dprive-dtls-and-tls-profiles-00">
        <t>Re-submission of draft-dgr-dprive-dtls-and-tls-profiles with name
        change to draft-ietf-dprive-dtls-and-tls-profiles. Also minor nits
        fixed.</t>
      </section>
    </section>
  </back>
</rfc>
